; ==============================================================================
; THIS IS A SAMPLE CONFIGURATION THAT YOU MAY COPY&PASTE TO YOUR APPLICATION.INI
; ============================================================================== 

[production]

; ----- ZIDS
; ZIDS uses PHP-IDS to analyze each request. The impact of a request is 
; an integer value returned by PHP-IDS that indicates indicates the severity 
; of the attack. The higher the impact, the more likely the request was an attack!
;
; ZIDS currently supports 4 levels to categorize a potential attack.
; Each level (accept 'attack') has two options:
;    upto = indicated the upper bound for the impact to fall into this level
;           EXAMPLE I: 'unlikely.upto = 5' means that all requests with an impact below 5 
;           will fall into the level 'unlikely'.
;			EXAMPLE II: 'unlikely.upto = 5' and 'likely.upto = 20' means that all requests
;           with an impact below 5 will fall into the level 'unlikely' and all requests
;           with an impact between 5 (the upper bound of the unlikely level) and 20 will
;           fall into the level 'likely'
;  action = defines how to deal with potential attacks that fall into this level.
;           currently, ZIDS supports four different actions
;           ignore   = simply ignore the attack
;           log      = write a log entry
;           email    = send an email to the admin of the website
;           redirect = stop the request and redirect the user to a different controller/action
; ~~~
; This example setup defines that an impact
; 0 - 5 is being considered as 'unlikely'. 
;            ZIDS will ignore all attacks of this category.
; 6 - 25 is being considered as 'likely'. 
;            ZIDS will log all attacks of this category.
; 26 - 50 is being considered as 'very likely'. 
;            ZIDS will log all attacks of this category and send an email to the admin.
; > 50 is being considered as 'attack'. 
;            ZIDS will log all attacks of this category, send an email to the admin and 
;            redirect the user to a special side.
; ~~~  
zids.level.unlikely.upto = 5
zids.level.unlikely.action = ignore
zids.level.likely.upto = 25
zids.level.likely.action = log
zids.level.verylikely.upto = 50 
zids.level.verylikely.action = log, email 
zids.level.attack.action = log, email, redirect

; ~~~
; if aggregate_in_session = true, ZIDS will aggregate the impact of each attack in the session.
; For instance, if the attacker submits a request with an impact of 5, and later on submits a 
; request with an impact of 10, the second request will be treated as a request with an impact
; of 15 (=5 + 10).
; ~~~
zids.aggregate_in_session = true

; ~~~
; defines the redirect target for the 'redirect' action
; ~~~
zids.redirect.module = default
zids.redirect.controller = index
zids.redirect.action = attack

; ~~~
; defines which items should be logged or put into the email that will be sent to the admin
; currently, ZIDS supports four items:
;     ip        = the IP of the attacker
;     impact    = the impact of the attack
;     tags      = the list of affected tags, e.g. sqli (for SQL Injections), xss, lfi, ...
;     variables = the variable in the request that contained the potential attack
; ~~~
zids.log.items = ip, impact, tags, variables

; ~~~
; defines which requests should be ignored by ZIDS. If the request is in the array of
; requests defined here, ZIDS will simply don't check or do anything.
; ~~~
zids.ignore.requests.module.0 = default
zids.ignore.requests.controller.0 = index
zids.ignore.requests.action.0 = sidebar

; ~~~
; Path to your PHP-IDS config file
; ~~~
zids.phpids.config = APPLICATION_PATH "/library/phpids-0.6.4/lib/IDS/Config/Config.ini.php"

; ~~~
; you may either use the 'email' option in ZIDS_Plugin_Ids constructor, or the setMail() method, 
; or use these parameters to define how to send an email to the admin, in case of an attack with
; a defined 'email' action
; ~~~
zids.email.smtp.auth = "login"
zids.email.smtp.username = "username"
zids.email.smtp.password = "password"
zids.email.smtp.host = "yourhost"
zids.email.from = "noreply@yourproject.com"
zids.email.to = "admin@yourproject.com"
